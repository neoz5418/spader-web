"use strict";(self.webpackChunk_docsearch_website=self.webpackChunk_docsearch_website||[]).push([[3016],{5680:(e,t,r)=>{r.d(t,{xA:()=>h,yg:()=>g});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},h=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),c=s(r),p=o,g=c["".concat(d,".").concat(p)]||c[p]||u[p]||a;return r?n.createElement(g,i(i({ref:t},h),{},{components:r})):n.createElement(g,i({ref:t},h))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1410:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>h});var n=r(8168),o=(r(6540),r(5680)),a=r(6025);const i={title:"How do we build a DocSearch index?"},l=void 0,d={unversionedId:"how-do-we-build-an-index",id:"version-legacy/how-do-we-build-an-index",title:"How do we build a DocSearch index?",description:"In this section you will learn how we build a DocSearch index from your page.",source:"@site/versioned_docs/version-legacy/how-do-we-build-an-index.mdx",sourceDirName:".",slug:"/how-do-we-build-an-index",permalink:"/docs/legacy/how-do-we-build-an-index",draft:!1,editUrl:"https://github.com/spader-ai/spader-web/edit/main/packages/website/versioned_docs/version-legacy/how-do-we-build-an-index.mdx",tags:[],version:"legacy",lastUpdatedBy:"liuf",lastUpdatedAt:1728739082,formattedLastUpdatedAt:"Oct 12, 2024",frontMatter:{title:"How do we build a DocSearch index?"},sidebar:"version-legacy/docs",previous:{title:"Config Files",permalink:"/docs/legacy/config-file"},next:{title:"Run your own",permalink:"/docs/legacy/run-your-own"}},s={},h=[{value:"Everything starts from your page",id:"everything-starts-from-your-page",level:2},{value:"We extract the payload with to your set of <code>selectors</code>",id:"we-extract-the-payload-with-to-your-set-of-selectors",level:2},{value:"We iterate through the HTML flow and build the payload",id:"we-iterate-through-the-html-flow-and-build-the-payload",level:2},{value:"We iterate through the payload and start pushing records",id:"we-iterate-through-the-payload-and-start-pushing-records",level:2},{value:"We pile up the elements based on the current temporary record",id:"we-pile-up-the-elements-based-on-the-current-temporary-record",level:2},{value:"We iterate until we match a <code>text</code> element",id:"we-iterate-until-we-match-a-text-element",level:2},{value:"We override the text element when we find a newer one",id:"we-override-the-text-element-when-we-find-a-newer-one",level:2},{value:"We remove the stashed, deeper elements when we add a higher level",id:"we-remove-the-stashed-deeper-elements-when-we-add-a-higher-level",level:2}],c={toc:h},u="wrapper";function p(e){let{components:t,...r}=e;return(0,o.yg)(u,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"In this section you will learn how we build a DocSearch index from your page."),(0,o.yg)("h2",{id:"everything-starts-from-your-page"},"Everything starts from your page"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_1.png"),alt:"1st step"}),(0,o.yg)("h2",{id:"we-extract-the-payload-with-to-your-set-of-selectors"},"We extract the payload with to your set of ",(0,o.yg)("inlineCode",{parentName:"h2"},"selectors")),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_2.png"),alt:"2nd step"}),(0,o.yg)("p",null,"We will focus on the highlighted information depending on your selectors."),(0,o.yg)("h2",{id:"we-iterate-through-the-html-flow-and-build-the-payload"},"We iterate through the HTML flow and build the payload"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_3.png"),alt:"3rd step"}),(0,o.yg)("p",null,"This payload will be the only data extracted from your page."),(0,o.yg)("h2",{id:"we-iterate-through-the-payload-and-start-pushing-records"},"We iterate through the payload and start pushing records"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_4.png"),alt:"4th step"}),(0,o.yg)("p",null,"We index the temporary record when we add an element to it (if ",(0,o.yg)("inlineCode",{parentName:"p"},"min_indexed_level")," equals ",(0,o.yg)("inlineCode",{parentName:"p"},"0"),")"),(0,o.yg)("h2",{id:"we-pile-up-the-elements-based-on-the-current-temporary-record"},"We pile up the elements based on the current temporary record"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_5.png"),alt:"5th step"}),(0,o.yg)("p",null,"Based on the position within the flow, we nest elements as much as possible to keep the context and increase the relevancy."),(0,o.yg)("h2",{id:"we-iterate-until-we-match-a-text-element"},"We iterate until we match a ",(0,o.yg)("inlineCode",{parentName:"h2"},"text")," element"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_6.png"),alt:"6th step"}),(0,o.yg)("h2",{id:"we-override-the-text-element-when-we-find-a-newer-one"},"We override the text element when we find a newer one"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_7.png"),alt:"7th step"}),(0,o.yg)("h2",{id:"we-remove-the-stashed-deeper-elements-when-we-add-a-higher-level"},"We remove the stashed, deeper elements when we add a higher level"),(0,o.yg)("img",{src:(0,a.A)("img/build_index/how_do_we_build_docsearch_index_8.png"),alt:"8th step"}),(0,o.yg)("p",null,"Contextual information and hierarchy must be updated once we encounter a new level. We are doing that because it highlights a new sub-section not related to the previous one."),(0,o.yg)("p",null,"If you need any further information, please connect with us on ",(0,o.yg)("a",{parentName:"p",href:"https://alg.li/discord"},"Discord")," or let our ",(0,o.yg)("a",{parentName:"p",href:"https://support.spader.com/"},"support")," team know."))}p.isMDXComponent=!0}}]);